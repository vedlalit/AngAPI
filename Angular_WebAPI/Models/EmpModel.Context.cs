//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Angular_WebAPI.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EmployeeDBEntities : DbContext
    {
        public EmployeeDBEntities()
            : base("name=EmployeeDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<UserLogin> UserLogins { get; set; }
        public virtual DbSet<UserMaster> UserMasters { get; set; }
    
        public virtual ObjectResult<EF_UserLogin_Result> EF_UserLogin(string userName, string userPassword)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("UserPassword", userPassword) :
                new ObjectParameter("UserPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EF_UserLogin_Result>("EF_UserLogin", userNameParameter, userPasswordParameter);
        }
    
        public virtual ObjectResult<localBPprocess_Result> localBPprocess()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<localBPprocess_Result>("localBPprocess");
        }
    
        public virtual ObjectResult<localprocess_Result> localprocess()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<localprocess_Result>("localprocess");
        }
    
        public virtual ObjectResult<processdetailtest_Result> processdetailtest(string proce)
        {
            var proceParameter = proce != null ?
                new ObjectParameter("proce", proce) :
                new ObjectParameter("proce", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<processdetailtest_Result>("processdetailtest", proceParameter);
        }
    
        public virtual ObjectResult<string> processnames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("processnames");
        }
    
        public virtual ObjectResult<Proctest_Result> Proctest(string proce)
        {
            var proceParameter = proce != null ?
                new ObjectParameter("proce", proce) :
                new ObjectParameter("proce", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proctest_Result>("Proctest", proceParameter);
        }
    
        public virtual ObjectResult<ProcessName_Result> ProcessName()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcessName_Result>("ProcessName");
        }
    }
}
